{"mappings":"gBAkBAA,EAlBmB,CAACC,EAAiBC,KACjC,MAAMC,EAAUC,GAAqBH,EAAOI,cAAgCD,GACtEE,EAAY,IACdC,aAAY,KACR,MAAMC,EAAOL,EAAO,0BAA4BA,EAAO,qBACnDK,EACAA,EAAKC,SAAU,EAEfC,cAAcC,EAAA,GAEnBT,GAEP,IAAIS,EAAQL,IAEZL,EAAOW,iBAAiB,aAAa,IAAMF,cAAcC,KAAQ,GACjEV,EAAOW,iBAAiB,YAAY,IAAOD,EAAQL,MAAc,EAAI,E,ICUzEO,EAzBqB,KACjB,IAAIF,EAEJ,MAAMG,EAAwBC,SAASC,cAAc,QACrDF,EAAKG,IAAM,WACXH,EAAKI,OAAS,IAAMJ,EAAKK,gBAAgB,QACzCJ,SAASK,KAAKC,YAAYP,GAO1BC,SAASO,iBAAoC,WAAWC,SAASC,IACzDA,EAAQC,QAAUC,OAAOC,SAASF,SAClC,CAAC,YAAa,cAAcF,SAASK,IACjCJ,EAAQZ,iBAAiBgB,GAAO,IAR5B,CAACJ,IACbK,aAAalB,GACbA,EAAQmB,YAAW,IAAOhB,EAAKiB,KAAOP,EAAQO,MAAO,KAMPC,CAAQR,KAAU,EAAI,IAEhE,CAAC,WAAY,YAAYD,SAASK,IAC9BJ,EAAQZ,iBAAiBgB,GAAO,IAAMd,EAAKK,gBAAgB,UAAS,EAAI,IAEhF,GACJ,ECnBJc,MAAMC,KAAKnB,SAASoB,uBAAuB,WAAWC,KAAKC,GAAMrC,EAAWqC,EAAG,QAE/ExB,G","sources":["js/sliders.ts","js/pre-load.ts","js/rhgs.ts"],"sourcesContent":["const initSlider = (slider: Element, duration: number) => {\n    const select = (selector: string) => slider.querySelector<HTMLInputElement>(selector);\n    const initTimer = () =>\n        setInterval(() => {\n            const next = select(\"input:checked ~ input\") || select(\"input:first-child\");\n            if (next) {\n                next.checked = true;\n            } else {\n                clearInterval(timer);\n            }\n        }, duration);\n\n    let timer = initTimer();\n\n    slider.addEventListener(\"mouseover\", () => clearInterval(timer), true);\n    slider.addEventListener(\"mouseout\", () => (timer = initTimer()), true);\n};\n\nexport default initSlider;\n","const initPreloads = () => {\n    let timer: NodeJS.Timer | undefined;\n\n    const link: HTMLLinkElement = document.createElement(\"link\");\n    link.rel = \"prefetch\";\n    link.onload = () => link.removeAttribute(\"href\");\n    document.head.appendChild(link);\n\n    const preload = (element: HTMLAnchorElement) => {\n        clearTimeout(timer);\n        timer = setTimeout(() => (link.href = element.href), 50);\n    };\n\n    document.querySelectorAll<HTMLAnchorElement>(\"a[href]\").forEach((element) => {\n        if (element.origin == window.location.origin) {\n            [\"mouseover\", \"touchstart\"].forEach((event) => {\n                element.addEventListener(event, () => preload(element), true);\n            });\n            [\"mouseout\", \"touchend\"].forEach((event) => {\n                element.addEventListener(event, () => link.removeAttribute(\"href\"), true);\n            });\n        }\n    });\n};\n\nexport default initPreloads;\n","import initSlider from \"./sliders\";\nimport initPreloads from \"./pre-load\";\n\nArray.from(document.getElementsByClassName(\"slider\")).map((e) => initSlider(e, 2500));\n\ninitPreloads();\n"],"names":["$2222e32ecabe6ab3$export$2e2bcd8739ae039","slider","duration","select","selector","querySelector","initTimer","setInterval","next","checked","clearInterval","timer","addEventListener","$0cc1005b96c01780$export$2e2bcd8739ae039","link","document","createElement","rel","onload","removeAttribute","head","appendChild","querySelectorAll","forEach","element","origin","window","location","event","clearTimeout","setTimeout","href","preload","Array","from","getElementsByClassName","map","e"],"version":3,"file":"rhgs.js.map"}