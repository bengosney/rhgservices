{"mappings":"gBAyCAA,EAzCmB,CAACC,EAAiBC,KACjC,MAAMC,EAAUC,GAAqBH,EAAOI,cAAgCD,GAKtEE,EAAY,IACdC,aAAY,KACR,MAAMC,EAAOL,EAAO,0BAA4BA,EAAO,qBACnDK,EACAA,EAAKC,SAAU,EAEfC,cAAcC,EAAA,GAEnBT,GAEP,IAKIU,EALAD,EAAQL,IAEZL,EAAOY,iBAAiB,aAAa,IAAMH,cAAcC,KAAQ,GACjEV,EAAOY,iBAAiB,YAAY,IAAOF,EAAQL,MAAc,GAGjEL,EAAOY,iBAAiB,cAAeC,GAAMF,EAAaE,IAAiB,GAC3Eb,EAAOY,iBAAiB,YAAaC,IACjC,MAAMC,EAAWD,EACjB,GAAIF,EAAY,CACZ,MAAMI,EAAWD,EAASE,UAAYL,EAAWK,WAC3CC,QAAEA,GAAYN,GACdO,eAAEA,GAAmBJ,EACrBK,EAAQD,EAAe,GAAGE,QAAUH,EAAQ,GAAGG,QAC/CC,EAAQH,EAAe,GAAGI,QAAUL,EAAQ,GAAGK,QAEjDP,GAAY,KAAOQ,KAAKC,IAAIL,GAASI,KAAKC,IAAY,IAARH,IAAgBE,KAAKC,IAAIL,GAAS,KAC5EA,EAAQ,IA9BAjB,EAAO,0BAA4BA,EAAO,uBA+BrCM,OAGzB,KACD,EAAI,E,ICbXiB,EAzBqB,KACjB,IAAIf,EAEJ,MAAMgB,EAAwBC,SAASC,cAAc,QACrDF,EAAKG,IAAM,WACXH,EAAKI,OAAS,IAAMJ,EAAKK,gBAAgB,QACzCJ,SAASK,KAAKC,YAAYP,GAO1BC,SAASO,iBAAoC,WAAWC,SAASC,IACzDA,EAAQC,QAAUC,OAAOC,SAASF,SAClC,CAAC,YAAa,cAAcF,SAASK,IACjCJ,EAAQxB,iBAAiB4B,GAAO,IAR5B,CAACJ,IACbK,aAAa/B,GACbA,EAAQgC,YAAW,IAAOhB,EAAKiB,KAAOP,EAAQO,MAAO,KAMPC,CAAQR,KAAU,EAAI,IAEhE,CAAC,WAAY,YAAYD,SAASK,IAC9BJ,EAAQxB,iBAAiB4B,GAAO,IAAMd,EAAKK,gBAAgB,UAAS,EAAI,IAEhF,GACJ,ECnBJc,MAAMC,KAAKnB,SAASoB,uBAAuB,WAAWC,KAAKnC,GAAMd,EAAWc,EAAG,OAE/EY,G","sources":["js/sliders.ts","js/pre-load.ts","js/rhgs.ts"],"sourcesContent":["const initSlider = (slider: Element, duration: number) => {\n    const select = (selector: string) => slider.querySelector<HTMLInputElement>(selector);\n\n    const nextSlide = () => select(\"input:checked ~ input\") || select(\"input:first-child\");\n\n\n    const initTimer = () =>\n        setInterval(() => {\n            const next = select(\"input:checked ~ input\") || select(\"input:first-child\");\n            if (next) {\n                next.checked = true;\n            } else {\n                clearInterval(timer);\n            }\n        }, duration);\n\n    let timer = initTimer();\n\n    slider.addEventListener(\"mouseover\", () => clearInterval(timer), true);\n    slider.addEventListener(\"mouseout\", () => (timer = initTimer()), true);\n\n    let startEvent: TouchEvent | undefined = undefined;\n    slider.addEventListener(\"touchstart\", (e) => startEvent = e as TouchEvent, true);\n    slider.addEventListener(\"touchend\", (e) => {\n        const endEvent = e as TouchEvent;\n        if (startEvent) {\n            const timeDiff = endEvent.timeStamp - startEvent.timeStamp;\n            const { touches } = startEvent;\n            const { changedTouches } = endEvent;\n            const xDiff = changedTouches[0].screenX - touches[0].screenX;\n            const yDiff = changedTouches[0].screenY - touches[0].screenY;\n\n            if (timeDiff <= 500 && Math.abs(xDiff) > Math.abs(yDiff * 1.5) && Math.abs(xDiff) > 100) {\n                if (xDiff > 0) {\n                    nextSlide()?.checked\n                }\n            }\n        }\n    }, true);\n};\n\nexport default initSlider;\n","const initPreloads = () => {\n    let timer: NodeJS.Timer | undefined;\n\n    const link: HTMLLinkElement = document.createElement(\"link\");\n    link.rel = \"prefetch\";\n    link.onload = () => link.removeAttribute(\"href\");\n    document.head.appendChild(link);\n\n    const preload = (element: HTMLAnchorElement) => {\n        clearTimeout(timer);\n        timer = setTimeout(() => (link.href = element.href), 50);\n    };\n\n    document.querySelectorAll<HTMLAnchorElement>(\"a[href]\").forEach((element) => {\n        if (element.origin == window.location.origin) {\n            [\"mouseover\", \"touchstart\"].forEach((event) => {\n                element.addEventListener(event, () => preload(element), true);\n            });\n            [\"mouseout\", \"touchend\"].forEach((event) => {\n                element.addEventListener(event, () => link.removeAttribute(\"href\"), true);\n            });\n        }\n    });\n};\n\nexport default initPreloads;\n","import initSlider from \"./sliders\";\nimport initPreloads from \"./pre-load\";\n\nArray.from(document.getElementsByClassName(\"slider\")).map((e) => initSlider(e, 3000));\n\ninitPreloads();\n"],"names":["$2222e32ecabe6ab3$export$2e2bcd8739ae039","slider","duration","select","selector","querySelector","initTimer","setInterval","next","checked","clearInterval","timer","startEvent","addEventListener","e","endEvent","timeDiff","timeStamp","touches","changedTouches","xDiff","screenX","yDiff","screenY","Math","abs","$0cc1005b96c01780$export$2e2bcd8739ae039","link","document","createElement","rel","onload","removeAttribute","head","appendChild","querySelectorAll","forEach","element","origin","window","location","event","clearTimeout","setTimeout","href","preload","Array","from","getElementsByClassName","map"],"version":3,"file":"rhgs.js.map"}